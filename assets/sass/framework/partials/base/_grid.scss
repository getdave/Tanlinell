// Grid
//
// Custom grid system for rapid prototyping and quick layout solutions.
//
// Styleguide 1.0

$gutter_width: $gutter+em;
$large_gutter_width: ($gutter*2)+em;
$half_gutter_width: ($gutter/2)+em;

$allGridClasses: #{grid-selectors()};

// Grid Wrappers
//
// Each grid you create must be contained with an wrapping HTML element used to "contain" the grid units and provide styling to ensure correct alignment
//
// Markup: <div class="grid-wrap {$modifiers}">
//   <div class="gc d1-2">I am an example grid unit</div>
//   <div class="gc d1-2">I am an example grid unit</div>
// </div>
//
// .large-gutter       	- doubles the size of the grid gutter
// .half-gutter       	- halves the size of the grid gutter
// .no-gutter       	- removes the grid gutter entirely
// .grid-ib       		- throws grid into inline-block mode as opposed to default "float" mode
// .grid-divide       	- adds bottom margin to each grid unit
//
// Styleguide 1.1
.grid-wrap {
	list-style:none;
    margin:0;
    padding:0;
    margin-left: -$gutter_width;
    clear: both;
    @include clearfix;
}

.large-gutter {
	@extend .grid-wrap;
	margin-left: -$large_gutter_width;
}

.half-gutter {
	@extend .grid-wrap;
	margin-left: -$half_gutter_width;
}

.no-gutter {
	@extend .grid-wrap;
	margin-left: 0;
}

.grid-ib {
    letter-spacing: rsize(-4px);
}

.grid-divide {
	margin-bottom: $baseLineHeight;
}

// Grid Units
//
// Each grid unit must have the base `.gc` class applied to it.
//
// Markup: <div class="grid-wrap">
//   <div class="gc">I am an example grid unit</div>
//   <div class="gc">I am an example grid unit</div>
// </div>
//
// Styleguide 1.2


#{$allGridClasses},
.gc {
    width: 100%;
    padding-left: $gutter_width;
    float: left;
    @include box-sizing(border-box);
    *behavior: url(/boxsizing.htc);

    .large-gutter & {
        padding-left: $large_gutter_width;
    }

    .half-gutter & {
        padding-left: $half_gutter_width;
    }

    .no-gutter & {
        padding-left: 0;
    }

    .grid-ib & {
        @include inline-block;
        float: none;
        letter-spacing: normal;
    }

    .grid-divide > & {
        margin-bottom: $baseLineHeight;
    }
}

@if ($bStdGridBreakpoints == true) {
	// Handheld Grids
	//
	// Add grid unit width modifiers prefixed with `.h` to control grid units on "handheld" viewports
	//
	// Markup: <div class="grid-wrap">
	//   <div class="gc h1-2">I will be 50% wide at the "handheld" breakpoint</div>
	//   <div class="gc h1-2">I will be 50% wide at the "handheld" breakpoint</div>
	// </div>
	//
	// Styleguide 1.2.1
	@include respond-to('tiny') {
		@include grid-set('h');
		.h-grid-clear {
			clear: left;
		}
	}

	// Lap Grids
	//
	// Add grid unit width modifiers prefixed with `.l` to control grid units on "lap" viewports
	//
	// Markup: <div class="grid-wrap">
	//   <div class="gc l1-2">I will be 50% wide at the "lap" breakpoint</div>
	//   <div class="gc l1-2">I will be 50% wide at the "lap" breakpoint</div>
	// </div>
	//
	// Styleguide 1.2.1
	@include respond-to('small') {
		@include grid-set('l');

		.h-grid-clear {
			clear: none;
		}

		.l-grid-clear {
			clear: left;
		}
	}

	// Desktop Grids
	@include respond-to('large') {
		@include grid-set('d');
		.h-grid-clear,
		.l-grid-clear {
			clear: none;
		}

		.d-grid-clear {
			clear: left;
		}
	}

	// Widescreen Grids
	@include respond-to('xlarge') {
		@include grid-set('w');

		.h-grid-clear,
		.l-grid-clear,
		.d-grid-clear {
			clear: none;
		}

		.w-grid-clear {
			clear: left;
		}
	}
}


// If we're in IE and JS is disabled then
// the .htc box-sizing hack won't run
// therefore we need to linearise our layout to ensure it
// doesn't break in older IE
@if ($bIE == true) {
	.no-js {
		#{$allGridClasses},
		.gc {
			float: none;
			width: 100%;
		}
	}
}








// ==========================================================================
// OVERIDES & EXTENSIONS
// ==========================================================================



/* ##Column Extensions */

/* ###Full Width */
/*
	<div class="full-col">
		I'm a full width column. You probably won't need to use me that often...
	</div>
*/

.full-col {
	width: auto;
	float: none;
}


/* ###Centered */
/*
	<div class="size1of3 centered-col">
		I'm a centered column. Useful on the odd occassion you need to center a grid unit
	</div>
*/

.centered-col {
    margin: 0 auto;
    float: none;
}






