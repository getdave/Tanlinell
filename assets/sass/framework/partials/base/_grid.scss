/* #Grid */

/* Custom grid system for rapid prototyping and quick layout solutions.

##Example 1 - fractions
	<div class="size1of2 firstcol">
		I'm the first of two grid items. I need an extra class to remove my gutter!
	</div>
	<div class="size1of2">
		I'm the second of the two grid items. No need for a second class for me!
	</div>


##Example 2 - columns
	<div class="sixcolumns firstcol">
		I'm the first of two grid items. I need an extra class to remove my gutter!
	</div>
	<div class="sixcolumns">
		I'm the second of the two grid items. No need for a second class for me!
	</div>
*/

$gutter_width: $gutter+em;
$large_gutter_width: ($gutter*2)+em;
$half_gutter_width: ($gutter/2)+em;


.grid-wrap {
	list-style:none;                
    margin:0;                       
    padding:0;                      
    margin-left: -$gutter_width;
    clear: both;
    @include clearfix;
}

.large-gutter {
	@extend .grid-wrap;
	margin-left: -$large_gutter_width;
}

.half-gutter {
	@extend .grid-wrap;
	margin-left: -$half_gutter_width;
}

.no-gutter {
	@extend .grid-wrap;
	margin-left: 0;
}

.grid-ib {
    letter-spacing: rsize(-4px);
}

.grid-divide {
	margin-bottom: $baseLineHeight;
}


// Generate a CSS selector string for all the possibile grid classes
$allGridClasses: #{grid-selectors()};


// ==========================================================================
// MOBILE GRID
// ==========================================================================

// Add styles to all the grid classes
#{$allGridClasses},
.gc {
    width: 100%;
    padding-left: $gutter_width;
    float: left;
    @include box-sizing(border-box);
    *behavior: url(boxsizing.htc);

    .large-gutter & {
        padding-left: $large_gutter_width;
    }

    .half-gutter & {
        padding-left: $half_gutter_width;
    }

    .no-gutter & {
        padding-left: 0;
    }

    .grid-ib & {
        @include inline-block;
        float: none;
        letter-spacing: normal;
    }

    .grid-divide > & {
        margin-bottom: $baseLineHeight;
    }
}

@if ($bStdGridBreakpoints == true) {
	// Handheld Grids
	@include respond-to('tiny') {
		@include grid-set('h');
	}

	// Lap Grids
	@include respond-to('small') {
		@include grid-set('l');
	}

	// Desktop Grids
	@include respond-to('large') {
		@include grid-set('d');
	}

	// Widescreen Grids
	@include respond-to('xlarge') {
		@include grid-set('w');
	}
}


// If we're in IE and JS is disabled then
// the .htc box-sizing hack won't run
// therefore we need to linearise our layout to ensure it 
// doesn't break in older IE
@if ($bIE == true) {
	.no-js {
		#{$allGridClasses},
		.gc {
			float: none;
			width: 100%;
		}
	}
}








// ==========================================================================
// OVERIDES & EXTENSIONS
// ==========================================================================



/* ##Column Extensions */

/* ###Full Width */
/* 
	<div class="full-col">
		I'm a full width column. You probably won't need to use me that often...
	</div>
*/

.full-col {
	width: auto;
	float: none;
}


/* ###Centered */
/* 
	<div class="size1of3 centered-col">
		I'm a centered column. Useful on the odd occassion you need to center a grid unit
	</div>
*/

.centered-col {
    margin: 0 auto;
    float: none;
}






