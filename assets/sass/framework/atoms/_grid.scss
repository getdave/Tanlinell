/* #Grid */

/* Custom grid system for rapid prototyping and quick layout solutions.

##Example 1 - fractions
	<div class="size1of2 firstcol">
		I'm the first of two grid items. I need an extra class to remove my gutter!
	</div>
	<div class="size1of2">
		I'm the second of the two grid items. No need for a second class for me!
	</div>


##Example 2 - columns
	<div class="sixcolumns firstcol">
		I'm the first of two grid items. I need an extra class to remove my gutter!
	</div>
	<div class="sixcolumns">
		I'm the second of the two grid items. No need for a second class for me!
	</div>
*/



.grid,
.grid-wrap {
	list-style:none;
    margin:0;
    padding:0;
    margin-left: -$gutter_width;
    clear: both;
	text-rendering: optimizespeed; // Protect against WebKit bug with optimizelegibility.
    @include clearfix;
}





.grid--divided,
.grid-divide {
	margin-bottom: $baseLineHeight;
}


// ==========================================================================
// MOBILE GRID
// ==========================================================================

// Add styles to all the grid classes
//#{$allGridClasses},
.gc {
    width: 100%;
    padding-left: $gutter_width;
    float: left;
    text-rendering: auto; // Reset text defaults.
    @include box-sizing(border-box);
    *behavior: url(/boxsizing.htc);

	
	.grid--divided,
    .grid-divide > & {
        margin-bottom: $baseLineHeight;
    }
}

@if ($use-standard-breakpoints == true) {
	// Handheld Grids
	@include respond-to('tiny') {
		@include griddle-build($grids,'h');
		.h-grid-clear {
			clear: left;
		}
	}

	// Lap Grids
	@include respond-to('small') {
		@include griddle-build($grids,'l');

		.h-grid-clear {
			clear: none;
		}

		.l-grid-clear {
			clear: left;
		}
	}

	// Desktop Grids
	@include respond-to('large') {
		@include griddle-build($grids,'d');
		.h-grid-clear,
		.l-grid-clear {
			clear: none;
		}

		.d-grid-clear {
			clear: left;
		}
	}

	// Widescreen Grids
	@include respond-to('xlarge') {
		@include griddle-build($grids,'w');

		.h-grid-clear,
		.l-grid-clear,
		.d-grid-clear {
			clear: none;
		}

		.w-grid-clear {
			clear: left;
		}
	}
}


// If we're in IE and JS is disabled then
// the .htc box-sizing hack won't run
// therefore we need to linearise our layout to ensure it
// doesn't break in older IE
@if ($is-oldie == true) {
	.no-js {
		#{$allGridClasses},
		.gc {
			float: none;
			width: 100%;
		}
	}
}


// ==========================================================================
// MODIFIERS
// ==========================================================================


// DOUBLE GUTTER
// ==========================================================================

.grid--double-gutter,
.grid-wrap--large-gutter,
.large-gutter {
	@extend .grid;
	margin-left: -$large_gutter_width;

	> .gc {
		padding-left: $large_gutter_width;
	}
}

// HALF GUTTER
// ==========================================================================

.grid--half-gutter,
.grid-wrap--half-gutter,
.half-gutter {
	@extend .grid;
	margin-left: -$half_gutter_width;

   	> .gc {
        padding-left: $half_gutter_width;
    }
}



// NO GUTTER
// ==========================================================================

.grid--no-gutter,
.grid-wrap--no-gutter,
.no-gutter {
	@extend .grid;
	margin-left: 0;

    > .gc {
        padding-left: 0;
    }
}


// INLINE BLOCK
// ==========================================================================

.grid--ib,
.grid-ib {
    letter-spacing: -0.31em; // Remove inter-unit whitespace that appears between `inline-block` child
    word-spacing: -0.43em; //  Remove inter-unit whitespace that appears between `inline-block` child

    > .gc {
		@include inline-block;
        float: none;
		letter-spacing: normal; // Reset text defaults.
		word-spacing: normal; // Reset text defaults.
    }
}


